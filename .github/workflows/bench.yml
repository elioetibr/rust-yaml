name: Benchmark

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 1
  RUST_BACKTRACE: 1

permissions:
  contents: read
  id-token: write
  pages: write
  pull-requests: write

jobs:
  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Generate GitHub App Token
        id: github_app_auth
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ github.event.repository.name }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: GitHub Actions Bot Setup
        uses: ./.github/actions/bot-setup

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo build for benchmarks
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-bench-standalone-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('src/**/*.rs') }}-${{ hashFiles('benches/**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-cargo-bench-standalone-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-cargo-bench-standalone-
            ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-cargo-bench-

      - name: Run benchmarks
        run: cargo bench

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: "cargo"
          output-file-path: target/criterion/report/index.html
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: "200%"
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: "@elioseverojunior"
