#!/bin/sh

# Git commit-msg hook for conventional commits validation
# This hook runs commitlint on the commit message

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if commitlint is available
if command -v npx >/dev/null 2>&1; then
    # Run commitlint on the commit message
    if npx commitlint --edit "$1"; then
        echo "${GREEN}✅ Commit message follows conventional format${NC}"
        exit 0
    else
        echo "${RED}❌ Commit message validation failed${NC}"
        echo "${YELLOW}Please follow conventional commit format:${NC}"
        echo "  <type>(<scope>): <description>"
        echo ""
        echo "${YELLOW}Valid types:${NC} build, ci, chore, docs, feat, fix, perf, refactor, revert, style, test"
        echo "${YELLOW}Example:${NC} feat(parser): add support for complex mapping keys"
        echo ""
        echo "See .gitmessage for more details and examples."
        exit 1
    fi
else
    # Fallback validation without commitlint
    echo "${YELLOW}⚠️  commitlint not found, using basic validation${NC}"

    commit_message=$(cat "$1")
    first_line=$(echo "$commit_message" | head -n 1)

    # Allow merge commits
    if echo "$first_line" | grep -q "^Merge "; then
        echo "${GREEN}✅ Merge commit - validation skipped${NC}"
        exit 0
    fi

    # Allow revert commits
    if echo "$first_line" | grep -q "^Revert "; then
        echo "${GREEN}✅ Revert commit - validation skipped${NC}"
        exit 0
    fi

    # Allow version bump commits with [skip ci]
    if echo "$first_line" | grep -q "^chore.*\[skip ci\]"; then
        echo "${GREEN}✅ Version bump commit - validation skipped${NC}"
        exit 0
    fi

    # Basic conventional commit format check
    if echo "$first_line" | grep -qE "^(build|ci|chore|docs|feat|fix|perf|refactor|revert|style|test)(\(.+\))?: .+"; then
        echo "${GREEN}✅ Commit message format looks good${NC}"
        exit 0
    else
        echo "${RED}❌ Commit message doesn't follow conventional format${NC}"
        echo "${YELLOW}Current message:${NC} $first_line"
        echo ""
        echo "${YELLOW}Expected format:${NC} <type>(<scope>): <description>"
        echo "${YELLOW}Valid types:${NC} build, ci, chore, docs, feat, fix, perf, refactor, revert, style, test"
        echo "${YELLOW}Example:${NC} feat(parser): add support for complex mapping keys"
        echo ""
        echo "See .gitmessage for more details and examples."
        echo "To install commitlint: npm install"
        exit 1
    fi
fi
